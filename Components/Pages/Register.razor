@page "/register"
@using LRFrontend.Models
@layout EmptyLayout
@inject NavigationManager Navigation
@rendermode InteractiveServer

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="card shadow rounded-4 p-4 border-0" style="max-width: 420px; width: 100%;">
        <h5 class="text-center text-secondary fw-bold mb-4">
            <i class="bi bi-person-plus me-2"></i>Register
        </h5>

        <EditForm Model="registerClass" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger small mb-2" />

            <div class="form-floating mb-3">
                <InputText id="name" class="form-control rounded-3" placeholder="Name" @bind-Value="registerClass.Name" />
                <label for="name"><i class="bi bi-person-fill me-2"></i>Username</label>
                <ValidationMessage For="@(() => registerClass.Name)" class="text-danger small" />
            </div>

            <div class="form-floating mb-3">
                <InputText id="email" class="form-control rounded-3" placeholder="Email" @bind-Value="registerClass.Email" />
                <label for="email"><i class="bi bi-envelope-fill me-2"></i>Email</label>
                <ValidationMessage For="@(() => registerClass.Email)" class="text-danger small" />
            </div>

            <div class="form-floating mb-3">
                <InputText id="password" type="password" class="form-control rounded-3" placeholder="Password" @bind-Value="registerClass.Password" />
                <label for="password"><i class="bi bi-lock-fill me-2"></i>Password</label>
                <ValidationMessage For="@(() => registerClass.Password)" class="text-danger small" />
            </div>

            <div class="form-floating mb-3">
                <InputText id="confirm" type="password" class="form-control rounded-3" placeholder="Confirm Password" @bind-Value="registerClass.ConfirmPassword" />
                <label for="confirm"><i class="bi bi-check2-circle me-2"></i>Confirm Password</label>
                <ValidationMessage For="@(() => registerClass.ConfirmPassword)" class="text-danger small" />
            </div>

            <div class="d-grid">
                <button type="submit" class="btn btn-dark rounded-pill">
                    Sign Up <i class="bi bi-person-check ms-1"></i>
                </button>
            </div>


            <div class="text-center mt-3">
                <small>
                    Already have an account?
                    <button type="button" class="btn btn-link p-0 m-0 align-baseline" @onclick="GoToLogin">
                        Login
                    </button>
                </small>
            </div>

            @if (!string.IsNullOrEmpty(registerMessage))
            {
                <div class="alert alert-info mt-3 text-center p-2">
                    @registerMessage
                </div>
            }
        </EditForm>
    </div>
</div>

@code {
    private RegisterClass registerClass = new();
    private string registerMessage;

    private void HandleRegister()
    {
        registerMessage = $"Registered: {registerClass.Email}";
        // TODO: Save to database logic
    }

    private void GoToLogin() => Navigation.NavigateTo("/login");
}

