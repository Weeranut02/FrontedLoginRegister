@page "/login"
@using LRFrontend.Models
@rendermode InteractiveServer
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="card shadow rounded-4 p-4 border-0" style="max-width: 400px; width: 100%;">
        <h5 class="text-center text-secondary fw-bold mb-4">
            <i class="bi bi-box-arrow-in-right me-2"></i>Login
        </h5>

        <EditForm Model="loginClass" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger small mb-2" />

            <!-- Email -->
            <div class="form-floating mb-3">
                <InputText id="email" class="form-control rounded-3" placeholder="Email" @bind-Value="loginClass.Email" />
                <label for="email"><i class="bi bi-envelope-fill me-2"></i>Email</label>
                <ValidationMessage For="@(() => loginClass.Email)" class="text-danger small" />
            </div>

            <!-- Password with toggle visibility -->
            <div class="form-floating mb-3 position-relative">
                <InputText id="password" class="form-control rounded-3" placeholder="Password"
                           type="@(!showPassword ? "password" : "text")"
                           @bind-Value="loginClass.Password" />
                <label for="password"><i class="bi bi-lock-fill me-2"></i>Password</label>
                <ValidationMessage For="@(() => loginClass.Password)" class="text-danger small" />

                <button type="button"
                        class="btn btn-sm btn-light position-absolute top-50 end-0 translate-middle-y me-3 border-0"
                        @onclick="() => showPassword = !showPassword">
                    <i class="bi @(showPassword ? "bi-eye-slash-fill" : "bi-eye-fill")"></i>
                </button>
            </div>

            <!-- Submit Button -->
            <div class="d-grid">
                <button type="submit" class="btn btn-dark rounded-pill" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                    }
                    else
                    {
                        <span>Sign In <i class="bi bi-arrow-right-short ms-1"></i></span>
                    }
                </button>
            </div>

            <!-- Link to Register -->
            <div class="text-center mt-3">
                <small>Don't have an account? <a href="javascript:void(0)" @onclick="GoToRegister">Register</a></small>
            </div>

            <!-- Message -->
            @if (!string.IsNullOrEmpty(loginMessage))
            {
                <div class="alert alert-success mt-3 text-center p-2">@loginMessage</div>
            }
            else if (!string.IsNullOrEmpty(loginError))
            {
                <div class="alert alert-danger mt-3 text-center p-2">@loginError</div>
            }
        </EditForm>
    </div>
</div>

@code {
    private LoginClass loginClass = new();
    private bool showPassword = false;
    private bool isLoading = false;
    private string loginMessage;
    private string loginError;

    private async void HandleLogin()
    {
        loginMessage = "";
        loginError = "";
        isLoading = true;

        // จำลอง login
        await Task.Delay(1000);

        if (loginClass.Email == "admin@example.com" && loginClass.Password == "123456")
        {
            loginMessage = $"Welcome, {loginClass.Email}";
        }
        else
        {
            loginError = "Invalid email or password.";
        }

        isLoading = false;
    }

    private void GoToRegister() => Navigation.NavigateTo("/register");
}
